---
teardown:
  - do:
      ingest.delete_pipeline:
        id: "my_pipeline"
        ignore: 404

---
"Test invoke bytes processor":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.bytes(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "1kb"}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "1kb" }
  - match: { _source.target_field: 1024 }

---
"Test invoke lowercase processor":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.lowercase(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "FooBar"}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "FooBar" }
  - match: { _source.target_field: "foobar" }

---
"Test invoke uppercase processor":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.uppercase(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "FooBar"}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "FooBar" }
  - match: { _source.target_field: "FOOBAR" }

---
"Test invoke json processor, assign to field":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.json(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "{\"foo\":\"bar\"}"}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "{\"foo\":\"bar\"}" }
  - match: { _source.target_field.foo: "bar" }

---
"Test invoke json processor, assign to root":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "Processors.json(ctx, 'source_field')"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "{\"foo\":\"bar\"}"}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "{\"foo\":\"bar\"}" }
  - match: { _source.foo: "bar" }

---
"Test invoke urlDecode processor":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.urlDecode(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "foo%20bar"}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "foo%20bar" }
  - match: { _source.target_field: "foo bar" }

---
"Test self referencing source with ignore failure":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.foo['foo']=ctx.foo;ctx['test-field']='test-value'",
                  "ignore_failure": true
                }
              },
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.uppercase(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "fooBar", foo: {foo: "bar"}}

  - do:
      get:
        index: test
        id: 1
  - match: { _source.source_field: "fooBar" }
  - match: { _source.target_field: "FOOBAR"}
  - match: { _source.test-field: null}

---
"Test self referencing source without ignoring failure":
  - do:
      ingest.put_pipeline:
        id: "my_pipeline"
        body:  >
          {
            "description": "_description",
            "processors": [
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.foo['foo']=ctx.foo;ctx['test-field']='test-value'"
                }
              },
              {
                "script" : {
                  "lang": "painless",
                  "source" : "ctx.target_field = Processors.uppercase(ctx.source_field)"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      catch: bad_request
      index:
        index: test
        id: 1
        pipeline: "my_pipeline"
        body: {source_field: "fooBar", foo: {foo: "bar"}}
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "Iterable object is self-referencing itself (ingest script)" }
